import { caricaMisure,caricaAvvisi } from '../logic/misure';
import jsforce from 'jsforce';
import { writable } from 'svelte/store';
import { get } from 'svelte/store';
import { caricaNominativiEnti } from '../logic/enti';
import { caricaReferenti } from '../logic/referenti';
import { caricaTipiReq } from '../logic/requirements';

export const misure = writable([]);
export const avvisi = writable([]);
export const referenti = writable([]);
export const enti = writable([]);
export const tipireq = writable([]);

export const lastUpdatedMisure = writable(new Date());
export const lastUpdatedAvvisi = writable(new Date());
export const lastUpdatedEnti = writable(new Date());
export const lastUpdatedReferenti = writable(new Date());

export const loadTipiReq = async() =>{
    let conn = new jsforce.Connection({
        loginUrl: "https://login.salesforce.com"
    });
    await conn.login("fausto.mancini@padigitale2026.com", "Raffaella$123Ei3SVa6MQiC2fnTQMNuW0QAo");
    // @ts-ignore
    tipireq.set(await caricaTipiReq(conn));
    await conn.logout();
}

export const loadEnti = async() =>{
    let conn = new jsforce.Connection({
        loginUrl: "https://login.salesforce.com"
    });
    await conn.login("fausto.mancini@padigitale2026.com", "Raffaella$123Ei3SVa6MQiC2fnTQMNuW0QAo");
    // @ts-ignore
    enti.set(await caricaNominativiEnti(conn));
    await conn.logout();
    lastUpdatedEnti.set(new Date());
}

export const loadReferenti = async() =>{
    let conn = new jsforce.Connection({
        loginUrl: "https://login.salesforce.com"
    });
    await conn.login("fausto.mancini@padigitale2026.com", "Raffaella$123Ei3SVa6MQiC2fnTQMNuW0QAo");
    // @ts-ignore
    referenti.set(await caricaReferenti(conn));
    await conn.logout();
    lastUpdatedReferenti.set(new Date());
}

export const loadMisure = async() =>{
    let conn = new jsforce.Connection({
        loginUrl: "https://login.salesforce.com"
    });
    await conn.login("fausto.mancini@padigitale2026.com", "Raffaella$123Ei3SVa6MQiC2fnTQMNuW0QAo");
    // @ts-ignore
    misure.set(await caricaMisure(conn));
    await conn.logout();
    lastUpdatedMisure.set(new Date());
}

export const loadAvvisi = async() =>{
    let conn = new jsforce.Connection({
        loginUrl: "https://login.salesforce.com"
    });
    await conn.login("fausto.mancini@padigitale2026.com", "Raffaella$123Ei3SVa6MQiC2fnTQMNuW0QAo");
    // @ts-ignore
    let avv = await caricaAvvisi(conn);
    for(let z = 0; z<avv.length; z++){
        avv[z].nomeMisura = get(misure).filter((x) =>

             x.Id === avv[z].outfunds__Parent_Funding_Program__c
    )[0].Name;
    }
    avvisi.set(avv);
    await conn.logout();
    lastUpdatedAvvisi.set(new Date());
}
